generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Campaign {
  id        Int         @id @unique @default(autoincrement())
  name      String
  ownerId   Int
  character Character[]
  owner     Users       @relation(fields: [ownerId], references: [id])
  createdAt DateTime    @default(now())
  updatedAt DateTime?   @default(now())
  deletedAt DateTime?
}

model Users {
  id        Int         @id @unique @default(autoincrement())
  nick      String      @unique
  name      String
  email     String      @unique
  phone     String
  password  String
  character Character[]
  campaigns Campaign[]
  isActive  Boolean?    @default(true)
  createdAt DateTime    @default(now())
  updatedAt DateTime?   @default(now())
  deletedAt DateTime?
}

model Character {
  id          Int       @id @unique @default(autoincrement())
  name        String
  about       Json?
  slots       Json?
  atributes   Json?
  status      Json?
  isNpc       Boolean?  @default(false)
  magics      Magic[]
  items       Item[]
  usersId     Int
  campaignsId Int
  owner       Users     @relation(fields: [usersId], references: [id])
  campaign    Campaign  @relation(fields: [campaignsId], references: [id])
  isAlive     Boolean?  @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @default(now())
  deletedAt   DateTime?
}

model Magic {
  id          Int       @id @unique @default(autoincrement())
  damage      Int
  name        String
  castingtime Int
  component   Json?
  description String
  duration    Int
  range       Int
  charId      Int
  char        Character @relation(fields: [charId], references: [id])
  deletedAt   DateTime?
}

model Item {
  id         Int       @id @unique @default(autoincrement())
  damage     Int
  name       String
  properties Json?
  value      Int
  weight     Int
  charId     Int
  char       Character @relation(fields: [charId], references: [id])
  createdAt  DateTime  @default(now())
  updatedAt  DateTime? @default(now())
  deletedAt  DateTime?
}
